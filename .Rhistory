table(tab$année)
tab<-read.csv(file="static/file/Service_Survey-2018.csv", sep=";", dec=",")
table(tab$année)
tab
str(tab)
summary(tab$année)
tab$année
summary(tab$Année)
table(tab$Année, tab$Discipline)
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
table(tab$Année, tab$Discipline)
knitr::opts_chunk$set(echo = FALSE)
# Import
# service de 2017
library(readxl)
# read_excel reads both xls and xlsx files
Service <- read_excel("G:/IRA/887_ENSGI/00_ADMINISTRATIF/Service_XLS/Service_Survey.xlsx", sheet = "Fusion")
Service$Année <- as.integer(Service$Année)
# Analyse
Serv <- Service[Service$Année==2017,]
aggregate(as.numeric(Serv$nbH.eff.etd), list(Serv$Cours), FUN=sum, na.rm=T)
Serv$Cours2 <- Serv$Cours
library(ggplot2)
# Forecast
ls <- unique(Serv$Cours2)
#Souhait <- subset(tab, tab$Cours2 in ls[ c(5, 6)])
#Souhait
ggplot(tab, aes(x=Group.1 , y=x)) +
geom_bar(stat="identity", fill="lightblue", colour="black") +
xlab("Etd") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = FALSE)
# Import
# service de 2017
library(readxl)
# read_excel reads both xls and xlsx files
Service <- read_excel("G:/IRA/887_ENSGI/00_ADMINISTRATIF/Service_XLS/Service_Survey.xlsx", sheet = "Fusion")
Service$Année <- as.integer(Service$Année)
# Analyse
Serv <- Service[Service$Année==2017,]
Serv$nbH.eff.etd <- as.numeric(Serv$nbH.eff.etd)
aggregate(Serv$nbH.eff.etd, list(Serv$Cours), FUN=sum, na.rm=T)
Serv$Cours2 <- Serv$Cours
Serv$Cours2[ Serv$Cours == 'Etude de terrain (2 EDT)' | grepl("Stage",Serv$Cours) | grepl("PFE",Serv$Cours) ] <- 'Stage'
tab <- data.frame( aggregate(Serv$nbH.eff.etd, list(Serv$Cours2), FUN=sum, na.rm=T))
tab
sum(Serv$nbH.eff.etd)
sum(Serv$nbH.eff.etd)
Serv$nbH.eff.etd
sum(Serv$nbH.eff.etd, na.rm = T)
#Souhait <- subset(tab, tab$Cours2 in ls[ c(5, 6)])
#Souhait
ggplot(tab, aes(x=nbH.eff.etd , y=Discipline)) +
geom_bar(stat="identity", fill="lightblue", colour="black") +
xlab("Etd") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Souhait <- subset(tab, tab$Cours2 in ls[ c(5, 6)])
#Souhait
ggplot(tab, aes(x=x , y=Group.1)) +
geom_bar(stat="identity", fill="lightblue", colour="black") +
xlab("Etd") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Souhait <- subset(tab, tab$Cours2 in ls[ c(5, 6)])
#Souhait
ggplot(tab, aes(x=Group.1 , y=x)) +
geom_bar(stat="identity", fill="lightblue", colour="black") +
xlab("Etd") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
table(tab$Année, tab$Discipline)
plot <- ggplot(tab, aes(x=tab$Année, y=nbH.eff.etd, fill=tab$Discipline)) +
geom_area(colour="black", size=.2, alpha=.8) +
theme_bw()
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
table(tab$Année, tab$Discipline)
plot <- ggplot(tab, aes(x=tab$Année, y=nbH.eff.etd, fill=tab$Discipline)) +
geom_area(colour="black", size=.2, alpha=.8) +
theme_bw()
plot
View(tab)
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
table(tab$Année, tab$Discipline)
plot <- ggplot(tab, aes(x=tab$Année, y=nbH.eff.etd, fill=tab$Discipline)) +
geom_area(colour="black", size=.2, alpha=.8) +
theme_bw()
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
View(tab)
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
table(tab$Année, tab$Discipline)
xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)
plot <- ggplot(tab, aes(x=tab$Année, y=nbH.eff.etd, fill=tab$Discipline)) +
geom_area(colour="black", size=.2, alpha=.8) +
theme_bw()
plot
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)
plot <- ggplot(tab, aes(x=tab$Année, y=nbH.eff.etd, fill=tab$Discipline)) +
geom_area(colour="black", size=.2, alpha=.8) +
theme_bw() +
scale_x_continuous(breaks=seq(min(tab$Année),max(tab$Année),1)) +
scale_y_continuous(breaks=seq(min(tab$nbH.eff.etd),max(tab$nbH.eff.etd),50)) +
ggtitle("Total US Employment (1993-2017)") +
labs(x="Year", y="Total Employment")
plot
max(tab$nbH.eff.etd)
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)
plot <- ggplot(tab, aes(x=tab$Année, y=nbH.eff.etd, fill=tab$Discipline)) +
geom_area(colour="black", size=.2, alpha=.8) +
theme_bw() +
scale_x_continuous(breaks=seq(min(tab$Année),max(tab$Année),1)) +
scale_y_continuous(breaks=seq(0,500,50)) +
ggtitle("Composition Service Enseignement)") +
labs(x="Year", y="Hours/year")
plot
library(plotly)
packageVersion('plotly')
data <- t(USPersonalExpenditure)
data <- data.frame("year"=rownames(data), data)
p <- plot_ly(data, x = ~year, y = ~Food.and.Tobacco, name = 'Food and Tobacco', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Household.Operation, name = 'Household Operation', fillcolor = '#50CB86') %>%
add_trace(y = ~Medical.and.Health, name = 'Medical and Health', fillcolor = '#4C74C9') %>%
add_trace(y = ~Personal.Care, name = 'Personal Care', fillcolor = '#700961') %>%
add_trace(y = ~Private.Education, name = 'Private Education', fillcolor = '#312F44') %>%
layout(title = 'United States Personal Expenditures by Categories',
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Expenditures (in billions of dollars)",
showgrid = FALSE))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="area-stackedoriginal")
chart_link
p
View(data)
xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)
data1 <- data.frame("year"=rownames(data1), data1)
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
data1 <- xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)
data1 <- data.frame("year"=rownames(data1), data1)
xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)
data1 <- xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
source("http://pcwww.liv.ac.uk/~william/R/crosstab.r")
crosstab(Survey, row.vars = "Age", col.vars = "Sex", type = "f")
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
spread(data1, Discipline, nbH.eff.etd)
library(tidyr)
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
spread(data1, Discipline, nbH.eff.etd)
spread(data1, tab.Discipline, Freq)
data1 <- data.frame("year"=rownames(data1), data1)
View(data1)
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
data1 <- spread(data1, tab.Discipline, Freq)
library(plotly)
packageVersion('plotly')
p <- plot_ly(data1, x = ~tab.année, y = ~tab.Discipline, name = 'Food and Tobacco', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Household Operation', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Medical and Health', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Personal Care', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Private Education', fillcolor = '#312F44') %>%
layout(title = 'United States Personal Expenditures by Categories',
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Expenditures (in billions of dollars)",
showgrid = FALSE))
p
p <- plot_ly(data1, x = ~tab.Année, y = ~tab.Discipline, name = 'Food and Tobacco', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Medical and Health', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Personal Care', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Private Education', fillcolor = '#312F44') %>%
layout(title = 'United States Personal Expenditures by Categories',
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Expenditures (in billions of dollars)",
showgrid = FALSE))
p
p <- plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Food and Tobacco', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Medical and Health', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Personal Care', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Private Education', fillcolor = '#312F44') %>%
layout(title = 'United States Personal Expenditures by Categories',
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Expenditures (in billions of dollars)",
showgrid = FALSE))
p
View(data1)
data1$Total <- sum(data1[,2-5])
+ data1$Statistique
data1$Total <- data1$Adm + data1$Economie + data1$Gestion + data1$GI + data1$Stage + data1$Statistique
data1$Total
p <- plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Food and Tobacco', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Gestion', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Génie Industriel', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Analyse de Données', fillcolor = '#312F44') %>%
layout(title = "Composition et Evolution du Service d'enseignement",
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Hours / year",
showgrid = FALSE))
p
p <- plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Administration', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Gestion', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Génie Industriel', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Analyse de Données', fillcolor = '#312F44') %>%
layout(title = "Composition et Evolution du Service d'enseignement",
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Hours / year",
showgrid = FALSE))
p
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
library(tidyr)
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
data1 <- spread(data1, tab.Discipline, Freq)
data1$Total <- data1$Adm + data1$Economie + data1$Gestion + data1$GI + data1$Stage + data1$Statistique
#data1 <- data.frame("year"=rownames(data1), data1)
library(plotly)
packageVersion('plotly')
p <- plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Administration', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Gestion', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Génie Industriel', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Analyse de Données', fillcolor = '#312F44') %>%
layout(title = "Composition et Evolution du Service d'enseignement",
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Hours / year",
showgrid = FALSE))
p
p
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
library(tidyr)
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
data1 <- spread(data1, tab.Discipline, Freq)
data1$Total <- data1$Adm + data1$Economie + data1$Gestion + data1$GI + data1$Stage + data1$Statistique
#data1 <- data.frame("year"=rownames(data1), data1)
library(plotly)
packageVersion('plotly')
p <- plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Administration', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Gestion', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Génie Industriel', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Analyse de Données', fillcolor = '#312F44') %>%
layout(title = "Composition et Evolution du Service d'enseignement",
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Hours / year",
showgrid = FALSE))
png(file="G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contactService.png", width = 350, height = "350"))
p
dev.off()
png(file="G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contactService.png", width = 350, height = "350")
png(file="G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contactService.png", width = 350, height = 350)
p
dev.off()
png(file="G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 350, height = 350)
p
dev.off()
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
library(tidyr)
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
data1 <- spread(data1, tab.Discipline, Freq)
data1$Total <- data1$Adm + data1$Economie + data1$Gestion + data1$GI + data1$Stage + data1$Statistique
#data1 <- data.frame("year"=rownames(data1), data1)
library(plotly)
packageVersion('plotly')
png(file="G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 350, height = 350)
p <- plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Administration', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Gestion', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Génie Industriel', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Analyse de Données', fillcolor = '#312F44') %>%
layout(title = "Composition et Evolution du Service d'enseignement",
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Hours / year",
showgrid = FALSE))
p
dev.off()
tab<-read.csv(file="static/file/Service_Survey-2018.csv", header=T,sep=";", dec=",")
tab$nbH.eff.etd <- as.numeric(tab$nbH.eff.etd)
library(tidyr)
data1 <- data.frame( xtabs(tab$nbH.eff.etd~ tab$Année + tab$Discipline)  )
data1 <- spread(data1, tab.Discipline, Freq)
data1$Total <- data1$Adm + data1$Economie + data1$Gestion + data1$GI + data1$Stage + data1$Statistique
#data1 <- data.frame("year"=rownames(data1), data1)
library(plotly)
packageVersion('plotly')
png(file="G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 350, height = 350)
plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Administration', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Gestion', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Génie Industriel', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Analyse de Données', fillcolor = '#312F44') %>%
layout(title = "Composition et Evolution du Service d'enseignement",
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Hours / year",
showgrid = FALSE))
p
dev.off()
export(p, file = "G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 350, height = 350)
plotly_IMAGE(p, width = 500, height = 500, format = "png", scale = 2,
out_file = "G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png")
orca(p, "G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 500, height = 500, format = "png", scale = 2)
orca(p, "G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 500, height = 500, format = "png")
#png(file="G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 350, height = 350)
p <- plot_ly(data1, x = ~tab.Année, y = ~Adm, name = 'Administration', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D') %>%
add_trace(y = ~Economie, name = 'Economie', fillcolor = '#50CB86') %>%
add_trace(y = ~Gestion, name = 'Gestion', fillcolor = '#4C74C9') %>%
add_trace(y = ~GI, name = 'Génie Industriel', fillcolor = '#700961') %>%
add_trace(y = ~Statistique, name = 'Analyse de Données', fillcolor = '#312F44') %>%
layout(title = "Composition et Evolution du Service d'enseignement",
xaxis = list(title = "",
showgrid = FALSE),
yaxis = list(title = "Hours / year",
showgrid = FALSE))
orca(p, "G:/IRA_BlogDown/BlogDown_V2/Ijoly.research/content/contact/Service.png", width = 500, height = 500)
blogdown:::serve_site()
**Rang CNRS des revues à comité de lecture **
|----:|:------------------------------------------:|:--:|:--:|:--------------------:|:-----:|
|rang |1                               |2  |3  |4  | Autres (non classés) |Total |
|nb   |1                               |2  |2  |6  | 4  |           |15    |
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
library(dplyr)
Total <- sum
testbib <- read.csv("data/test_export_articles2.csv", sep=';', header = T,  na.strings = "NA")
data.frame(testbib) %>%
filter(bibtype == "Article", year > '2015') %>%
arrange(desc(year)) %>%
detailed_entries(what = title,
when = year,
with = author,
where = paste(journal,", ",pages,sep=""))
library(dplyr) ; library(vitae)
Total <- sum
testbib <- read.csv("data/test_export_articles2.csv", sep=';', header = T,  na.strings = "NA")
data.frame(testbib) %>%
filter(bibtype == "Article", year > '2015') %>%
arrange(desc(year)) %>%
detailed_entries(what = title,
when = year,
with = author,
where = paste(journal,", ",pages,sep=""))
#write.csv(testbib, file = "export.bib")
tab1 <- data.frame(testbib) %>%
filter(bibtype == "Article") %>%
arrange(desc(year)) %>%
detailed_entries(what = title,
when = year,
with = author,
where = paste(journal,", ",pages,sep=""))
kable(tab1)
library(knitr)
kable(tab1)
library(RefManageR)
BibOptions(check.entries = FALSE,
bib.style = "authoryear",
cite.style = "alphabetic",
style = "markdown",
hyperlink = FALSE,
dashed = FALSE)
myBib <- ReadBib("./myBib.bib", check = FALSE)
library(RefManageR)
BibOptions(check.entries = FALSE,
bib.style = "authoryear",
cite.style = "alphabetic",
style = "markdown",
hyperlink = FALSE,
dashed = FALSE)
myBib <- ReadBib("data/Liste_Publi.bib", check = FALSE)
library(RefManageR)
BibOptions(check.entries = FALSE,
bib.style = "authoryear",
cite.style = "alphabetic",
style = "markdown",
hyperlink = FALSE,
dashed = FALSE)
myBib <- ReadBib("data/Liste_Publi2.bib", check = FALSE)
myBib <- ReadBib("data/Liste_Publi3.bib", check = FALSE)
PrintBibliography(myBib)
file <- system.file("Bib", "biblatexExamples.bib", package = "RefManageR")
BibOptions(check.entries = FALSE)
bib <- ReadBib(file)
Citet(bib, 12)
NoCite(bib, title = "Alkanethiolate")
PrintBibliography(bib, .opts = list(style = "latex",
bib.style = "authoryear"))
Citep(bib, c("loh", "geer"), .opts = list(cite.style = "numeric"),
before = "see e.g., ")
Citet(bib, "loh", .opts = list(cite.style = "numeric", super = TRUE))
AutoCite(bib, eprinttype = "arxiv", .opts = list(cite.style = "authoryear"))
AutoCite(bib, eprinttype = "arxiv", .opts = list(cite.style = "pandoc"))
Citep(bib, author = "kant")
## shorthand field in both entries gets used for numeric and alphabetic labels
TextCite(bib, author = "kant", .opts = list(cite.style = "alphabetic"))
TextCite(bib, author = "kant", .opts = list(cite.style = "numeric"))
TextCite(bib, author = "kant", .opts = list(cite.style = "alphabetic",
style = "html"))
punct <- unlist(BibOptions("bibpunct"))
punct[3:4] <- c("(", ")")
TextCite(bib, 33, .opts = list(bibpunct = punct, cite.style = "alphabetic"))
BibOptions(restore.defaults = TRUE)
## Not run:
library(knitr)
## See also TestNumeric.Rmd and TestAlphabetic.Rmd for more examples
old.dir <- setwd(tdir <- tempdir())
doc <- system.file("Rmd", "TestRmd.Rmd", package = "RefManageR")
file.show(doc)
View(myBib)
myBib[["bjp19"]][["bjp19"]][["bjp19"]]
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
---
date: "2020-03-14T00:00:00Z"
external_link: ""
image:
caption: Photo by Luke Chesser <a href="https://unsplash.com/photos/JKUTrJ4vK00">on Unsplash </a>
focal_point: Smart
links:
- icon: twitter
icon_pack: fab
name: Follow
url:
slides: example
summary: "Research Project: Comparaison de performance de modèles de choix discret
de consommation."
tags:
- Machine Learning
title: IA and Econometrics for Choice Modelling
url_code: ""
url_pdf: ""
url_slides: ""
url_video: ""
link-citations: yes
bibliography: MIAI_Conso.bib
biblio-style: apalike
---
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
build_site()
blogdown::build_site()
